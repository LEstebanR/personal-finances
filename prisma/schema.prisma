// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum AccountType {
  cash
  savings
}

model Account {
  id             String      @id @default(uuid()) @db.Uuid
  userId         String
  name           String
  type           AccountType   @default(cash)
  initialBalance Float
  createdAt      DateTime      @default(now())
  isArchived     Boolean       @default(false)
  transactions   Transaction[] @relation("AccountTransactions")
  fromTransfers  Transfer[]    @relation("FromAccount")
  toTransfers    Transfer[]    @relation("ToAccount")
  description    String?
  currentBalance Float

  @@index([userId])
}

model Transaction {
  id          String   @id @default(uuid())
  accountId   String
  userId      String
  amount      Decimal
  type        String
  description String
  date        DateTime
  category    String?
  createdAt   DateTime @default(now())
  account     Account  @relation("AccountTransactions", fields: [accountId], references: [id])

  @@index([userId])
  @@index([accountId])
}

model Transfer {
  id           String   @id @default(uuid())
  userId       String
  fromAccountId String
  toAccountId   String
  amount       Decimal
  date         DateTime
  note         String?
  createdAt    DateTime @default(now())
  fromAccount  Account  @relation("FromAccount", fields: [fromAccountId], references: [id])
  toAccount    Account  @relation("ToAccount", fields: [toAccountId], references: [id])

  @@index([userId])
  @@index([fromAccountId])
  @@index([toAccountId])
}

